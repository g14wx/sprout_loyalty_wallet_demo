plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {


    signingConfigs {
        storeone {
            def keystoreProperties = new Properties()
            def keystorePropertiesFile = rootProject.file('key.properties.storeone')
            if (keystorePropertiesFile.exists()) {
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            }
            def storeFileFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null

            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile storeFileFile
            storePassword keystoreProperties['storePassword']
            println("${storeFileFile}")
        }

        storetwo {
            def keystoreProperties = new Properties()
            def keystorePropertiesFile = rootProject.file('key.properties.storetwo')
            if (keystorePropertiesFile.exists()) {
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            }
            def storeFileFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null

            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile storeFileFile
            storePassword keystoreProperties['storePassword']
            println("${storeFileFile}")
        }

        storethree {
            def keystoreProperties = new Properties()
            def keystorePropertiesFile = rootProject.file('key.properties.storethree')
            if (keystorePropertiesFile.exists()) {
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            }
            def storeFileFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null

            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile storeFileFile
            storePassword keystoreProperties['storePassword']
            println("${storeFileFile}")
        }
    }


    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions "sprout-production-apps"

    productFlavors {
        storeone {
            dimension "sprout-production-apps"
            applicationId "storeone.online.sprout.crm"
            versionNameSuffix "-production"
            signingConfig signingConfigs.storeone
            versionCode 100
            minSdkVersion 23
            resValue "string", "app_name", "Store One"
        }

        storetwo {
            dimension "sprout-production-apps"
            applicationId "storetwo.online.sprout.crm"
            versionNameSuffix "-production"
            signingConfig signingConfigs.storetwo
            versionCode 100
            minSdkVersion 23
            resValue "string", "app_name", "Store Two"
        }

        storethree {
            dimension "sprout-production-apps"
            applicationId "storethree.online.sprout.crm"
            versionNameSuffix "-production"
            signingConfig signingConfigs.storethree
            versionCode 100
            minSdkVersion 23
            resValue "string", "app_name", "Store Three"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----

   namespace "online.sprout.crm.loyalty_wallet"
    compileSdkVersion 33
    ndkVersion '21.1.6352462'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "online.sprout.crm.loyalty_wallet"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 8
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            // signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
